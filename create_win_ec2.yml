---
 - name:  provisioning EC2 instances using Ansible
   hosts: all
   connection: local
   gather_facts: False
   tags: provisioning
   
   vars:
     win_ec2_sec_group: win_app_secgrp
     aws_region: ap-south-1
     win_ec2_instance_type: t2.micro
     win_ami_id: ami-03e1a0a6d6e66e21a
     ansible_password: flexib@3
   tasks:

     - name: Task # 1 - Create my security group
       ec2_group:
         name: "{{ win_ec2_sec_group }}"
         description: Rules Allowing traffic on for RDP,WinRM and Http
         region: "{{ aws_region }}"
         rules:
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 8080
              to_port: 8080
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 3389
              to_port: 3389
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 5986
              to_port: 5986
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 5985
              to_port: 5985
              cidr_ip: 0.0.0.0/0
            - proto: icmp
              from_port: -1 
              to_port: -1
              cidr_ip: 0.0.0.0/0              
         rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
     - name: Task # 2 Launch the new EC2 Windows Instance
       ec2:
          region: "{{ aws_region }}"
          instance_type: "{{ win_ec2_instance_type}}"
          image: "{{ win_ami_id }}"
          wait: true
          wait_timeout: 500
          count: 1
          instance_tags:
            Name: Flexib_windows
            Owner: 3i-infotech
          monitoring: false
          user_data: "{{ lookup('template', '/var/lib/awx/winrm-userdata.txt.j2') }}"  
       register: ec2
       
       
     - name: waiting foe WinRM on all host
       wait_for:
          port: 5986
          host: "{{ item.public_ip }}"
          timeout: 300
          state: started

       with_items: "{{ ec2.instances }}"
     - debug: 
          msg: "System {{ item.piblic_dns_name }} has public-ip {{ item.public_ip }}"
       with_items: "{{ ec2.instances }}"          
       
